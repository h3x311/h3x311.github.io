[{"categories":["cs"],"contents":"1st day Download the table, and close now. ","date":"2022-03-05T20:55:13+08:00","permalink":"https://h3x311.github.io/posts/lc/","section":"posts","tags":["leetcode"],"title":"Lc"},{"categories":["dev"],"contents":" 看过一些游戏制作的书，玩过很多游戏。并不代表对游戏制作和理解游戏有多少经验。 做之前翻了youtube的\u0026quot;make game in one day\u0026quot;\u0026ldquo;unity\u0026rdquo;,reddit的gamedev，还有游戏引擎选择的讨论。 索性没看太多engine教程。直接拿最热门的unity使用。 解构游戏很简单，对于新手来说，难在使用工具。 重点是找很多simple basic的游戏来remake， 而不是你最爱玩的。 重点是了解engine的基础使用。 不要做tetris，做点平台类的横版过关就很好。 最后以刚开始分析的tetris结尾。\n ","date":"2022-02-28T12:46:36+08:00","permalink":"https://h3x311.github.io/posts/gameinoneday/","section":"posts","tags":["game"],"title":"10h制作游戏失败"},{"categories":["tool"],"contents":"工具分三类。一类是快捷键，一类是软件，一类是脚本。编辑器不再提。emacs我不会用，vim我用的不熟，vscode反而舒服。\nHotkey 作为一个还算爱键盘的人。hotkey和cheatsheet是我比较爱折腾的俩东西。 过去用的比较多的是spacelaucher来启动软件和网页。屏幕管理用的是触发角。 为什么转移平铺？减少了切换和关闭的工作，连接了窗口管理和软件，消灭了冲突。 每当开始用新editor，最先找的就是cheatsheet。 hotkey主要分布在3个地方：\n browser(我用surfing key的原因是类vim，Tridacity功能更多，等无聊再研究TODO  close this, before, after move this, before, after F   editor(nvim vscode  vim宏代替vscode快捷键 撤销 TODO vim键该列一张自己的扩展表   terminal(cli  move word 前后 del word   software  obsidian  hotkey未设置 search panel and template 加入   logseq  估计是和vim统一     窗口管理  yabai 和 skhd(skhd config有bug，待解决TODO   系统快捷键和上方冲突  整体统一TODO   hotkey连接脚本 TODO  Software 作为一个对新软件忍不住找来安装体验的人，试过很多，坚持下来的不过5个。:/ 对软件的要求是：\n 能解决workflow的问题 能解决workflow的同质问题 能简约视觉效果 轻量且快速  所以mac下使用量最高的是： alfred和popclip相同的功能在websearch。\n alfred  alfred的workflow可以把websearch集合在一起。TODO   popclip  popclip更加方便。多平台同时搜选中内容。 popclip+anki adds的联动可以满足查词+记录需求。   obsidian和logseq  记笔记和写东西的最佳选择 logseq写大纲   kitty  Script cli 下的脚本主要出发点是整理文件，工作流继续扩展，备份，git推送 还有什么？ 常见的wf里用的工具link起来。但没有思路。TODO\n navi  navi本身可以替代alias  它可以分类。替换：分类 - 整理cheat TODO(结合fzf\u0026ndash; navi | fzf)     需求两个，整理文件 - 备份 - git  加需要的dotfile    cli tool 主要两个，文件管理，搜索。 但搜索需求还没有特别大。\nTODO文件内格式转换 1. vim宏 2. 写脚本程序 还有很多各种类型有意思的cli工具。比如网络相关的。 希望以后all in cli\n","date":"2022-02-26T23:51:01+08:00","permalink":"https://h3x311.github.io/posts/toolist/","section":"posts","tags":["hotkey","software","script"],"title":"Toolist"},{"categories":["blog"],"contents":"为什么用Hugo 相比hexo，hugo的功能和ui更现代化。hugo没有npm，安装很方便。 gatsby也不错。\n建站中的问题  选theme直接找推荐，不要看list，选更新最近的并且热度高的 添加disqus写的域名应该是xx.github.io del submodule的最后一步 git rm --cached theme位置  hexcell  对称 无限 来自爱玩的游戏 hexcell  写什么  技术类总结 比如搞定某个workflow, 比如搞定某个技术问题, 比如瞎写学习总结  ","date":"2022-02-25T20:09:26+08:00","permalink":"https://h3x311.github.io/posts/hugo/","section":"posts","tags":["hugo"],"title":"Hugo"},{"categories":["tool"],"contents":"需求  git用户和repo分离 多ssh key登陆  Q1 git config --local user.name \u0026#34;xxx\u0026#34; git config --local user.email \u0026#34;xxx\u0026#34; 修改当前项目下的git用户前提是添加多用户ssh key到～/.ssh/config\nQ2 1. 生成key ssh-keygen -t rsa -C \u0026#34;user2@email.com\u0026#34; 名字加后缀，不要覆盖之前的key\n2. 添加key到ssh agent中 ssh-agent bash ssh-add ~/.ssh/keyname 3. 修改ssh的config Host github-user2 HostName github.com User git Host 名称随意 当添加remote repo时，Host 替换：\ngit remote add origin git@github-user2:repoUrl 而不是\ngit remote add origin git@github.com:repoUrl  git clone 如是  总结 这样就可以愉快的使用多账号提交代码了！\n","date":"2022-02-22T14:26:09+08:00","permalink":"https://h3x311.github.io/posts/git/","section":"posts","tags":["git"],"title":"Git多用户"}]